# ansible-playbook -i ../hosts.ini haproxy.yml -e 'ansible_ssh_common_args="-o StrictHostKeyChecking=no"'
---
- name: Install stuff on all nodes
  hosts: haproxy
  become: true
  any_errors_fatal: true
  vars:
    user_name: "scio"
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
    - name: Upgrade packages
      apt:
        upgrade: yes
    - name: allow user to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        line: '{{ user_name }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    - name: set up authorized keys for the user
      authorized_key: user={{ user_name }} key="{{item}}"
      with_file:
        - ~/.ssh/id_rsa.pub
    - name: Install Keepalived & HAproxy
      ansible.builtin.apt:
        pkg:
        - keepalived
        - haproxy
    - name: Keepalived script
      ansible.builtin.copy:
        dest: /etc/keepalived/check_apiserver.sh
        content: |
          #!/bin/sh

          errorExit() {
            echo "*** $@" 1>&2
            exit 1
          }

          curl --silent --max-time 2 --insecure https://localhost:6443/ -o /dev/null || errorExit "Error GET https://localhost:6443/"
          if ip addr | grep -q {{ virtualip }}; then
            curl --silent --max-time 2 --insecure https://{{ virtualip }}:6443/ -o /dev/null || errorExit "Error GET https://{{ virtualip }}:6443/"
          fi
        mode: '0755'
    - name: Keepalived conf
      ansible.builtin.copy:
        dest: /etc/keepalived/keepalived.conf
        content: |
          vrrp_script check_apiserver {
            script "/etc/keepalived/check_apiserver.sh"
            interval 3
            timeout 10
            fall 5
            rise 2
            weight -2
          }

          vrrp_instance VI_1 {
              state BACKUP
              interface ens33
              virtual_router_id 2
              priority 100
              advert_int 5
              authentication {
                  auth_type PASS
                  auth_pass mysecret
              }
              virtual_ipaddress {
                  {{ virtualip }}
              }
              track_script {
                  check_apiserver
              }
          }
        mode: '0644'
    - name: Enable & start keepalived service
      ansible.builtin.shell: |
        systemctl enable --now keepalived
    - name: HAproxy conf
      ansible.builtin.copy:
        dest: /etc/haproxy/haproxy.cfg
        content: |
          frontend kubernetes-frontend
            bind *:6443
            mode tcp
            option tcplog
            default_backend kubernetes-backend

          backend kubernetes-backend
            option httpchk GET /healthz
            http-check expect status 200
            mode tcp
            option ssl-hello-chk
            balance roundrobin
              server kmaster1 {{ hostvars['master1']['ansible_host'] }}:6443 check fall 3 rise 2
              server kmaster2 {{ hostvars['master2']['ansible_host'] }}:6443 check fall 3 rise 2
              server kmaster3 {{ hostvars['master3']['ansible_host'] }}:6443 check fall 3 rise 2
        mode: '0644'
    - name: Enable & restart haproxy service
      ansible.builtin.shell: |
        systemctl enable haproxy && systemctl restart haproxy